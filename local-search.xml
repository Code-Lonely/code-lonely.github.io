<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一名菜鸟程序员的吐槽</title>
    <link href="/2020/09/05/%E4%B8%80%E5%90%8D%E8%8F%9C%E9%B8%9F%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%90%90%E6%A7%BD/"/>
    <url>/2020/09/05/%E4%B8%80%E5%90%8D%E8%8F%9C%E9%B8%9F%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%90%90%E6%A7%BD/</url>
    
    <content type="html"><![CDATA[<ul><li><p>最近从学校出来，在外面实习了，起初找工作的时候，由于学校那边催的急（因为学校说：如果找不到自主实习工作，就要被学校统一安排进厂），时间有限，就随便找了个公司，做什么二次开发的（当时我不知道什么是二次开发，只知道跟Java有关）。</p></li><li><p>那我想着，跟Java有关的话，我应该可以胜任。稀里糊涂就答应了。</p></li><li><p>进了公司之后才发现，是做泛微OA的二次开发，主要涉及一些流程的编写，调用泛微写好的API，以及写一些简单的SQL语句，跟我学的JavaWeb开发，根本不搭边呀。</p></li><li><p>害~，还是太年轻了呀！</p></li><li><p>由于害怕，在这家公司呆久了，会把自己给搞废了（因为都是调用泛微的API，感觉对自己的能力不会有多大提升）。</p></li><li><p>再三考虑之下，我毅然决定辞职，另谋出路（当时有点冲动，直接裸辞的）。</p></li><li><p>好在上天还是有些眷顾我的，辞职几天之后，就找到新工作了（不过建议大家还是不要裸辞哈）。</p></li><li><p>进了新公司之后，其实蛮不习惯的，因为我本身是学Java的，但那个公司是搞.NET跟Android的（但为了混过实习，而且毕竟可以接触到编程，所以，我还是去了）。</p></li><li><p>进公司第一天，叫我装个Android Studio的软件，由于国内有qiang的原因，创建项目的时候，老是构建不成功（因为需要去国外的服务器，下载必要的依赖）。单单这个问题，就浪费了我好多时间，真的太难了。</p></li><li><p>好在，最后用了国内阿里云的依赖，完美解决。在这里要特别感谢一下阿里**(╥╯^╰╥)**。</p></li><li><p>之后我的老大（就是给我分配工作的人），扔了一个Android的项目给我，让我根据客户的需求在原有的代码上添加一个功能。</p></li><li><p>我打开这个项目一看，我惊呆了，<strong>啊啊啊啊~</strong></p></li><li><p>竟然是一份没有写注释的代码，而且里面的类名、变量名，数据库字段名的命名方式巨不规范，很多都是英文 + 拼音，<strong>这他么是人干的事？？？</strong></p></li><li><p>后来才知道，原来也是一个新手写的，我心想：这也太没有职业素养了吧。。。</p></li><li><p>由于没有注释，我只能自己慢慢调试。。。</p></li><li><p>但凭借着我扎实的Java基础，我还是硬生生的完成了老大安排的任务。</p></li><li><p>还没完，之后老大又丢了一个WinFrom的项目给我，让我维护。</p></li><li><p>害~，还是一样没有写注释，不仅如此，我还在里面发现了一段特别奇怪的代码，代码如下：</p><pre><code class="hljs C#"><span class="hljs-keyword">if</span>(<span class="hljs-number">1</span> == <span class="hljs-number">1</span>)&#123;    <span class="hljs-comment">//具体的业务逻辑</span>&#125;</code></pre></li><li><p>我刚看到的时候，懵了一下，心想：这位前辈是故意搞我的吧，这么写有意义吗？？？</p></li><li><p>害~，直到现在，我都无法勘破这位前辈的真正意图，或许是我才疏学浅吧。。。。</p></li><li><p>如果有大佬懂的，麻烦指点一下小弟。</p></li><li><p>最后，真的奉劝各位码农大哥，你们写代码，能不能规范点，最起码把注释写上吧，这是基本的职业素养了。。。</p></li><li><p>记得我的老师说过一句话：<strong>写代码不写注释，基本跟耍流氓没什么区别</strong>。</p></li><li><p>送给各位不写注释的大哥！！！</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>趣事记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>吐槽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python刷简书文章阅读量</title>
    <link href="/2020/09/04/Python%E5%88%B7%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F/"/>
    <url>/2020/09/04/Python%E5%88%B7%E7%AE%80%E4%B9%A6%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="一、基本原理"><a href="#一、基本原理" class="headerlink" title="一、基本原理"></a>一、基本原理</h1><ul><li><p>简书文章在账号未登陆的的情况下，每刷新一次页面，文章阅读量便会 + 1 。</p></li><li><p>通过上述思路，我们可以得出，只要不断在浏览器刷新页面（未登陆情况下），便可以达到增加阅读量的目的。</p></li><li><p>但上述方式，需要不断点击页面刷新按钮，足见效率低下。</p></li><li><p>我们知道，在浏览器中，页面刷新的本质就是重新向服务器发送get请求，因此，我们猜想，在程序中不断模拟浏览器发出get请求，同样可以达到刷简书文章的目的。</p></li><li><p>通过浏览器抓包分析，如下图所示</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/23570498-819246a1a9b5d93e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="抓包分析"></p><ul><li><p>我们发现，在整个请求过程中，阅读量的增加，主要发生于该post请求。</p></li><li><p>因此，我们只需要在程序中不断发送post请求该接口，便可实现利用程序刷文章阅读量。</p></li></ul><h1 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h1><ul><li><p>具体代码如下所示</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<span class="hljs-keyword">import</span> re<span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> threading<span class="hljs-comment"># 获取简书文章阅读量</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getReadCount</span>(<span class="hljs-params">jianshu_Url</span>):</span>    <span class="hljs-comment"># 请求头设置</span>    headers = &#123;        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&#x27;</span>    &#125;    <span class="hljs-comment"># 请求页面，爬取页面源代码</span>    result = requests.get(jianshu_Url, headers=headers)    <span class="hljs-comment"># 使用正则表达式，在源代码中，获取表示当前文章浏览量的字符串</span>    results = re.findall(<span class="hljs-string">r&#x27;&quot;views_count&quot;:\d+&#x27;</span>, result.text)    <span class="hljs-comment"># 返回结果</span>    <span class="hljs-keyword">return</span> results[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;:&#x27;</span>)[<span class="hljs-number">1</span>]<span class="hljs-comment"># 增加阅读量</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">addReadCount</span>(<span class="hljs-params">jianshu_Url, readCountEnd</span>):</span>    <span class="hljs-comment"># 请求体</span>    payloadData = &#123;        <span class="hljs-string">&#x27;fuck&#x27;</span>: <span class="hljs-number">1</span>    &#125;    <span class="hljs-comment"># 请求头设置</span>    headers = &#123;        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&#x27;</span>,        <span class="hljs-string">&#x27;Origin&#x27;</span>: <span class="hljs-string">&#x27;https://www.jianshu.com&#x27;</span>,        <span class="hljs-string">&#x27;Referer&#x27;</span>: jianshu_Url    &#125;    <span class="hljs-comment"># 获取文章当前浏览量</span>    nowReadCount = int(getReadCount(jianshu_Url))    <span class="hljs-comment"># 循环发送post请求</span>    temp = jianshu_Url[<span class="hljs-string">&quot;https://www.jianshu.com/p/a190a889563e&quot;</span>.find(<span class="hljs-string">&quot;/p/&quot;</span>) + <span class="hljs-number">3</span>:]    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nowReadCount, readCountEnd):        requests.post(<span class="hljs-string">&quot;https://www.jianshu.com/shakespeare/notes/&quot;</span> + temp + <span class="hljs-string">&quot;/mark_viewed&quot;</span>, data=json.dumps(payloadData), headers=headers)        print(i)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    <span class="hljs-comment"># 更改下方的两个参数即可</span>    <span class="hljs-comment"># 文章的请求路径</span>    jianshu_Url = <span class="hljs-string">&quot;https://www.jianshu.com/p/XXXXX&quot;</span>    <span class="hljs-comment"># 需要刷到多少</span>    readCountEnd = <span class="hljs-number">1000</span>    <span class="hljs-comment"># 使用多线程，提高效率</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, <span class="hljs-number">30</span>):        threading.Thread(target=addReadCount, args=(jianshu_Url, readCountEnd)).start()</code></pre></li><li><p>上述变量，是一个“仅供参考”的变量，并不能决定，文章阅读量的最终结果，因为，在实际过程中，发现一个bug。</p></li><li><p>就是程序这边，有时候只发了一次post请求，但文章的阅读量却增加了 2 。</p></li><li><p>初步猜测，应该是简书服务器的bug，并非python程序问题！</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术贴</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>简书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio进行真机调试时报错：Installation did not succeed.The application could not be installed：INSTA...</title>
    <link href="/2020/08/31/Android%20Studio%E8%BF%9B%E8%A1%8C%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E6%8A%A5%E9%94%99%EF%BC%9AInstallation%20did%20not%20succeed.The%20application%20could%20not%20be%20installed%EF%BC%9AINSTA.../"/>
    <url>/2020/08/31/Android%20Studio%E8%BF%9B%E8%A1%8C%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E6%8A%A5%E9%94%99%EF%BC%9AInstallation%20did%20not%20succeed.The%20application%20could%20not%20be%20installed%EF%BC%9AINSTA.../</url>
    
    <content type="html"><![CDATA[<h1 id="一、报错信息"><a href="#一、报错信息" class="headerlink" title="一、报错信息"></a>一、报错信息</h1><ul><li>使用Android Studio（3.5.2版本）对Android5.1版本的手机进行真机调试时发生报错</li><li>报错信息如下<br><img src="https://upload-images.jianshu.io/upload_images/23570498-9d068fcdb2fe6eae.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="报错信息"><h1 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h1></li><li>出现问题之后在网上查了好久，说是要进入设置里的Instant Run中，将Enable…选项取消勾选。</li><li>如下图所示<br><img src="https://upload-images.jianshu.io/upload_images/23570498-6ed26e158afb2249.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>但奇怪的是，在3.5.2版本的Android Studio中并没有这个设置，这让我百思不得其解</li><li>经过一番查询之后，原来3.5版本以上的Android Studio取消了这个设置</li><li>无奈，我只得卸载3.5.2版本的Android Studio，重新安装3.4.1版本的Android Studio</li><li>安装成功之后，进入Instant Run设置，取消勾选Enable…选项</li><li>至此，问题解决！<h1 id="三、Android-Studio版本信息查看"><a href="#三、Android-Studio版本信息查看" class="headerlink" title="三、Android Studio版本信息查看"></a>三、Android Studio版本信息查看</h1></li><li>此处附上Android Studio版本信息查看方法，如下图所示<br><img src="https://upload-images.jianshu.io/upload_images/23570498-87d1ca751e69b591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="版本信息查看方法"></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/23570498-d0d94fcf87b11cb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="版本信息"></p>]]></content>
    
    
    <categories>
      
      <category>踩坑记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio详细安装教程</title>
    <link href="/2020/08/31/Android%20Studio%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2020/08/31/Android%20Studio%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、下载安装包"><a href="#一、下载安装包" class="headerlink" title="一、下载安装包"></a>一、下载安装包</h1><ul><li>点击[<a href="http://www.android-studio.org/">这里</a>]下载安装包。</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/23570498-9b1722cf7dd0134a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="下载安装包"></p><h1 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h1><ul><li>正式安装之前，最好先准备两个文件夹：一个用来存放安装程序，一个用来存放SDK。效果如下如图，所示。</li><li>注意：文件夹路径不要带空格！<br><img src="https://upload-images.jianshu.io/upload_images/23570498-b6ed1d8b8188f045.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="创建文件夹"></li></ul><h1 id="三、Android-Studio安装"><a href="#三、Android-Studio安装" class="headerlink" title="三、Android Studio安装"></a>三、Android Studio安装</h1><ul><li>双击打开安装包，正式安装。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-7bdf13905f47b829.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-0fcd2812d9bb7e6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-30961b868e71db66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-e7dfbaae0e1cad9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-9f7771792361c55e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>耐心等待安装完成，大约2min…<br><img src="https://upload-images.jianshu.io/upload_images/23570498-98cc1d3101cba067.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>取消打开Android Studio的对勾，切记！<br><img src="https://upload-images.jianshu.io/upload_images/23570498-2302131da518ba5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><h1 id="四、初始化Android-Studio配置"><a href="#四、初始化Android-Studio配置" class="headerlink" title="四、初始化Android Studio配置"></a>四、初始化Android Studio配置</h1></li><li>打开如下图所示路径下的idea.properties文件<br><img src="https://upload-images.jianshu.io/upload_images/23570498-5f3828773572eb5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="打开idea.properties文件"></li><li>打开之后在如下图所示相应位置添加以下内容<pre><code class="hljs arcade">idea.config.path=D:<span class="hljs-regexp">/Android/</span>.AndroidStudio/configidea.system.path=D:<span class="hljs-regexp">/Android/</span>.AndroidStudio/system</code></pre><img src="https://upload-images.jianshu.io/upload_images/23570498-ff63c73de55e6596.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="文件内容修改"><h1 id="五、打开软件Android-Studio安装SDK"><a href="#五、打开软件Android-Studio安装SDK" class="headerlink" title="五、打开软件Android Studio安装SDK"></a>五、打开软件Android Studio安装SDK</h1></li><li>在开始菜单中找到Android Studio并打开<br><img src="https://upload-images.jianshu.io/upload_images/23570498-132a493acb9a3385.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="打开Android Studio"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-de12572a2b82b31c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>出现以下界面，选择cancel<br><img src="https://upload-images.jianshu.io/upload_images/23570498-9095d02c9781ea62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-d623b9fda4ceff2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>选择自定义SDK路径<br><img src="https://upload-images.jianshu.io/upload_images/23570498-9eec13b30858e6a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>选择主题<br><img src="https://upload-images.jianshu.io/upload_images/23570498-a38208a142f33d86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="选择主题"></li><li>接着选择SDK路径为之前创建的文件夹！<br><img src="https://upload-images.jianshu.io/upload_images/23570498-d7193252c733ac8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="选择SDK路径"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-81ec32a655e00591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>点击Finish<br><img src="https://upload-images.jianshu.io/upload_images/23570498-622b0df1b0addf1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></li><li>然后开始疯狂跑安装</li><li>耐心等待即可<br><img src="https://upload-images.jianshu.io/upload_images/23570498-f0dcef68ecdd07d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="安装中"></li><li>安装成功后，出现以下界面，不要急着创建工程！</li><li>先进入设置界面配置一下Gradle的路径<br><img src="https://upload-images.jianshu.io/upload_images/23570498-71d903abc41890f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="进入配置界面"></li><li>设置gradle路径为：<code>D:/Android/.gradle</code><br><img src="https://upload-images.jianshu.io/upload_images/23570498-737b71a2fe069dcb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="设置gradle路径"><h1 id="六、换源"><a href="#六、换源" class="headerlink" title="六、换源"></a>六、换源</h1></li><li>软件默认使用官方谷歌源，但由于国内有qiang，所以这里选择国内阿里源</li><li>在如下图所示路径中打开相应文件<br><img src="https://upload-images.jianshu.io/upload_images/23570498-f2ddc64e4769d7b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="image.png"></li><li>在对应位置中加入以下代码<pre><code class="hljs roboconf">maven &#123; <span class="hljs-attribute">url&#x27;https</span>://maven<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/repository/public/&#x27; &#125;maven &#123; url&#x27;https://maven<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/repository/google/&#x27; &#125;maven &#123; url&#x27;https://maven<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/repository/jcenter/&#x27; &#125;maven &#123; url&#x27;https://maven<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/repository/central/&#x27; &#125;</code></pre><img src="https://upload-images.jianshu.io/upload_images/23570498-8b926b03bc872c9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="修改源"></li><li>七、新建工程<br><img src="https://upload-images.jianshu.io/upload_images/23570498-f719c4faf4a0aa14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="新建工程"></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/23570498-a0cfd46c05bd82f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p><p><img src="https://upload-images.jianshu.io/upload_images/23570498-ac0714334463355f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p><ul><li><p>项目信息填写完毕之后，点击Finish</p></li><li><p>之后在界面左侧，找到如下图所示文件<br><img src="https://upload-images.jianshu.io/upload_images/23570498-0f28b041f47a9eec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="image.png"></p></li><li><p>去[<a href="https://services.gradle.org/distributions/">这里</a>]下载对应的gradle离线包</p></li><li><p>将其放到如下图所示对应文件夹<br><img src="https://upload-images.jianshu.io/upload_images/23570498-4659306254de1224.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p></li><li><p>注意：操作完毕后，务必完全关闭软件，再重新开启！！！</p></li><li><p>等待工程构建完毕<br><img src="https://upload-images.jianshu.io/upload_images/23570498-546ac000e00e5c7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="构建中"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-fb38e0a3f8afe561.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="构建完毕"></p><h1 id="八、新建模拟器"><a href="#八、新建模拟器" class="headerlink" title="八、新建模拟器"></a>八、新建模拟器</h1></li><li><p>点击界面右上角的这个图标<br><img src="https://upload-images.jianshu.io/upload_images/23570498-670faa5c9343e259.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"><br><img src="https://upload-images.jianshu.io/upload_images/23570498-a91ee3428ea597e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p></li><li><p>选择模拟器型号（手机型号），这里随便选就可以了，选完点击Next<br><img src="https://upload-images.jianshu.io/upload_images/23570498-8bbb1d2ba913a9ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p></li><li><p>出现以下界面，点击Download<br><img src="https://upload-images.jianshu.io/upload_images/23570498-c52fea5bc038c8ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p></li><li><p>耐心等待下载<br><img src="https://upload-images.jianshu.io/upload_images/23570498-f078862c0f10c9df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="下载中"></p></li><li><p>下载完成之后，点击Finish<br>#九、运行项目</p></li><li><p>点击页面右上角的启动按钮<br><img src="https://upload-images.jianshu.io/upload_images/23570498-c6eb875e5d3d781c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540"></p></li><li><p>耐心等待项目启动….</p></li><li><p>启动成功界面如下<br><img src="https://upload-images.jianshu.io/upload_images/23570498-9a274e957458a90e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="启动成功"></p></li><li><p>至此，软件安装成功！</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>环境搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBaits在Dao接口方法中传入List或数组类型的参数，抛出param not found异常</title>
    <link href="/2020/06/22/MyBaits%E5%9C%A8Dao%E6%8E%A5%E5%8F%A3%E6%96%B9%E6%B3%95%E4%B8%AD%E4%BC%A0%E5%85%A5List%E6%88%96%E6%95%B0%E7%BB%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E6%8A%9B%E5%87%BAparam-not-found%E5%BC%82%E5%B8%B8/"/>
    <url>/2020/06/22/MyBaits%E5%9C%A8Dao%E6%8E%A5%E5%8F%A3%E6%96%B9%E6%B3%95%E4%B8%AD%E4%BC%A0%E5%85%A5List%E6%88%96%E6%95%B0%E7%BB%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E6%8A%9B%E5%87%BAparam-not-found%E5%BC%82%E5%B8%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="一、报错代码"><a href="#一、报错代码" class="headerlink" title="一、报错代码"></a>一、报错代码</h1><ul><li>Dao接口方法<pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title">findInIds</span><span class="hljs-params">(List&lt;Integer&gt; ids)</span></span>;</code></pre></li><li>Mapper配置<pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;findInIds&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span>&gt;</span>        select * from user        <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;ids != null and ids.size() &gt; 0&quot;</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;ids&quot;</span> <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;and id in (&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span>                    #&#123;id&#125;                <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></code></pre></li><li>以上代码运行时，会抛出如下异常，异常信息：<pre><code class="hljs stylus">org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.ibatis</span><span class="hljs-selector-class">.binding</span><span class="hljs-selector-class">.BindingException</span>: Parameter <span class="hljs-string">&#x27;ids&#x27;</span> not found.</code></pre></li></ul><h1 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h1><ul><li>在接口方法中的参数前加上@Param注解，为参数取个名字，便可以解决上述问题<pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title">findInIds</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;ids&quot;)</span> List&lt;Integer&gt; ids)</span></span>;</code></pre></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>踩坑记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MyBaits</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序与NodeMCU通信，以机械手控制为例</title>
    <link href="/2020/06/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8ENodeMCU%E9%80%9A%E4%BF%A1%EF%BC%8C%E4%BB%A5%E6%9C%BA%E6%A2%B0%E6%89%8B%E6%8E%A7%E5%88%B6%E4%B8%BA%E4%BE%8B/"/>
    <url>/2020/06/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8ENodeMCU%E9%80%9A%E4%BF%A1%EF%BC%8C%E4%BB%A5%E6%9C%BA%E6%A2%B0%E6%89%8B%E6%8E%A7%E5%88%B6%E4%B8%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><ul><li>效果展示<br><img src="https://upload-images.jianshu.io/upload_images/23570498-ee0f58b36856966c.gif?imageMogr2/auto-orient/strip" alt="效果展示"></li><li>本文章主要讲述微信小程序与物联网开发板NodeMCU在局域网下进行通信，使用的通信协议为WebSocket协议。</li><li>在本文中，以微信小程序控制舵机为例，演示通信过程。</li><li>具体原理：在NodeMCU里创建WebSocket服务，微信小程序通过API<code>wx.connectSocket(Object object)</code>连接到机械手的WebSocket服务，之后便可通过API<code>SocketTask.send(Object object)</code>对机械手发送信息，机械手通过判断微信小程序发送的过来的信息，对舵机执行相应操作。</li></ul><hr><p>#二、准备事项</p><h4 id="1、硬件准备："><a href="#1、硬件准备：" class="headerlink" title="1、硬件准备："></a>1、硬件准备：</h4><ul><li><p>NodeMCU开发板 1 块</p></li><li><p>机械手支架 1 个</p></li><li><p>舵机 3 个</p></li><li><p>电源模块1个（能够输出5v即可）</p></li><li><p>杜邦线若干</p><h4 id="2、软件准备："><a href="#2、软件准备：" class="headerlink" title="2、软件准备："></a>2、软件准备：</h4><h6 id="2-1、下载安装微信开发者工具"><a href="#2-1、下载安装微信开发者工具" class="headerlink" title="2.1、下载安装微信开发者工具"></a>2.1、下载安装微信开发者工具</h6><h6 id="2-2、下载安装Arduino并添加ESP8266开发板库-可观看作者的另一篇教程，链接如下"><a href="#2-2、下载安装Arduino并添加ESP8266开发板库-可观看作者的另一篇教程，链接如下" class="headerlink" title="2.2、下载安装Arduino并添加ESP8266开发板库(可观看作者的另一篇教程，链接如下)"></a>2.2、下载安装Arduino并添加ESP8266开发板库(可观看作者的另一篇教程，链接如下)</h6></li><li><p><a href="https://www.jianshu.com/p/16062a3e0cab">https://www.jianshu.com/p/16062a3e0cab</a></p><h6 id="2-3、下载第三方库WebSocketsServer-h，链接如下"><a href="#2-3、下载第三方库WebSocketsServer-h，链接如下" class="headerlink" title="2.3、下载第三方库WebSocketsServer.h，链接如下"></a>2.3、下载第三方库WebSocketsServer.h，链接如下</h6></li><li><p>链接：<a href="https://pan.baidu.com/s/1FbO9m4wS2MQ-Pat9OBOsyA">https://pan.baidu.com/s/1FbO9m4wS2MQ-Pat9OBOsyA</a>  提取码：4xs6 </p></li><li><p>第三方库下载完成之后将其解压，然后放置在项目文件夹路径下</p></li><li><p>项目文件夹路径查看方式如下</p></li><li><p>打开Arduino IDE → 点击文件 → 首选项<br><img src="https://upload-images.jianshu.io/upload_images/23570498-442dd4a2a0688ec7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="项目文件夹路径"></p></li><li><p>将下载的库放置在该路径下的libraries文件夹里<br><img src="https://upload-images.jianshu.io/upload_images/23570498-ed918bc009d27361.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="第三方库放置位置"></p></li></ul><hr><p>#三、模块介绍</p><ul><li><p>NodeMCU是一款基于ESP8266芯片的物联网开发板，价格便宜，开发简单。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-eaade43ae735fbe6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="NodeMCU开发板外观"></p></li><li><p>三自由度的机械手支架，某宝上买的，各关节上面安装的是舵机。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-4021fd5e9789d6b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="机械手支架"></p></li><li><p>舵机是一种位置（角度）伺服的驱动器，适用于那些需要角度不断变化并可以保持的控制系统。舵机有三根线，分别为VCC(红色)、GND(棕色)和信号线(黄色)<br><img src="https://upload-images.jianshu.io/upload_images/23570498-178cf3f598945ff1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="舵机外观"></p></li><li><p>因为上述舵机需要用5v电源驱动，NodeMCU自身不足以驱动3个舵机，所以需要外接电源，只要能输出5v就行。本款电源模块是输入12v，输出5v，也是某宝上买的。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-c15127919e655646.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="电源模块"></p></li></ul><hr><h1 id="四、接线"><a href="#四、接线" class="headerlink" title="四、接线"></a>四、接线</h1><p>1、分别将3个舵机的红线（VD）接到电源模块的5v接口，棕线（GND）接到电源模块的GND接口。<br>2、将电源模块的GND与NodeMCU的GND相连。<br>3、将舵机的黄线接到NodeMCU的PWM（模拟信号）口，本文中选用2、4、5口作为舵机的控制IO口。</p><h1 id="五、代码编写"><a href="#五、代码编写" class="headerlink" title="五、代码编写"></a>五、代码编写</h1><h4 id="1、NodeMCU"><a href="#1、NodeMCU" class="headerlink" title="1、NodeMCU"></a>1、NodeMCU</h4><h6 id="1-1、开发板选择，如图所示"><a href="#1-1、开发板选择，如图所示" class="headerlink" title="1.1、开发板选择，如图所示"></a>1.1、开发板选择，如图所示</h6><p><img src="https://upload-images.jianshu.io/upload_images/23570498-d90059f093b1e453.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="开发板选择"></p><h6 id="1-2、具体代码"><a href="#1-2、具体代码" class="headerlink" title="1.2、具体代码"></a>1.2、具体代码</h6><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ESP8266WiFi.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;WebSocketsServer.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ESP8266mDNS.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Servo.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> H_MIN_DEG 0     <span class="hljs-comment">// 水平舵机的最小角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> H_MAX_DEG 180   <span class="hljs-comment">// 水平舵机的最大角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> V_MIN_DEG 70    <span class="hljs-comment">// 垂直舵机的最小角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> V_MAX_DEG 155   <span class="hljs-comment">// 垂直舵机的最大角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> G_MIN_DEG 60    <span class="hljs-comment">// 机械爪的最小角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> G_MAX_DEG 135   <span class="hljs-comment">// 机械爪的最大角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> H_INIT_DEG 90   <span class="hljs-comment">// 水平舵机的初始角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> V_INIT_DEG 100  <span class="hljs-comment">// 垂直舵机的初始角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> G_INIT_DEG 60   <span class="hljs-comment">// 机械爪的初始角度</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WEB_SOCKET_POST 80            <span class="hljs-comment">// webSocket服务端口</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MDNS_SERVICE_NAME <span class="hljs-meta-string">&quot;gripper&quot;</span>   <span class="hljs-comment">// MDNS服务名称</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MDNS_SERVICE_TYPE <span class="hljs-meta-string">&quot;tcp&quot;</span>       <span class="hljs-comment">// MDNS服务类型</span></span>Servo horizontal;   <span class="hljs-comment">// 水平舵机</span>Servo vertical;     <span class="hljs-comment">// 垂直舵机</span>Servo gripper;      <span class="hljs-comment">// 机械爪</span>WebSocketsServer webSocket = WebSocketsServer(WEB_SOCKET_POST); <span class="hljs-comment">//创建webSocket服务</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setup</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;  <span class="hljs-comment">//  初始化舵机</span>  servoInit();  <span class="hljs-comment">//  初始化串口，设置波特率为9600</span>  Serial.begin(<span class="hljs-number">9600</span>);  <span class="hljs-comment">//  一键配网</span>  smartConfig();  <span class="hljs-comment">//  设置MDNS域名服务</span>  <span class="hljs-keyword">if</span> (MDNS.begin(<span class="hljs-string">&quot;esp8266&quot;</span>)) &#123;    Serial.println(<span class="hljs-string">&quot;MDNS服务开始！&quot;</span>);  &#125;  <span class="hljs-comment">// 注册MDNS服务</span>  <span class="hljs-keyword">if</span>(MDNS.addService(MDNS_SERVICE_NAME,MDNS_SERVICE_TYPE,<span class="hljs-number">80</span>)) &#123;    Serial.println(<span class="hljs-string">&quot;MDNS服务注册成功！&quot;</span>);  &#125;  webSocket.begin();  <span class="hljs-comment">// 注册webSocket服务的回调函数</span>  webSocket.onEvent(webSocketEvent);  Serial.println(<span class="hljs-string">&quot;webSocket服务开始&quot;</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">loop</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;  MDNS.update();  webSocket.loop();&#125;<span class="hljs-comment">// 一键配网</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">smartConfig</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;  WiFi.begin();  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)  &#123;    <span class="hljs-keyword">if</span> (WiFi.status() == WL_CONNECTED)    &#123;      Serial.println(<span class="hljs-string">&quot;AutoConfig Success&quot;</span>);      Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());      Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());      delay(<span class="hljs-number">1000</span>);      Serial.println(WiFi.localIP());      <span class="hljs-comment">//WiFi.printDiag(Serial); //打印关键的Wi-Fi诊断信息，信息比较多</span>      <span class="hljs-keyword">break</span>;    &#125;    <span class="hljs-keyword">else</span>    &#123;      Serial.println(<span class="hljs-string">&quot;AutoConfig Waiting...&quot;</span>);      <span class="hljs-comment">//Serial.println(WiFi.status());</span>      delay(<span class="hljs-number">1000</span>);    &#125;  &#125;  <span class="hljs-keyword">if</span> (WiFi.status() != WL_CONNECTED)  &#123;    Serial.println(<span class="hljs-string">&quot;AutoConfig Faild!&quot;</span> );    WiFi.mode(WIFI_STA);    Serial.println(<span class="hljs-string">&quot;\r\nWait for Smartconfig&quot;</span>);    WiFi.beginSmartConfig();    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)    &#123;      Serial.print(<span class="hljs-string">&quot;.&quot;</span>);      <span class="hljs-keyword">if</span> (WiFi.smartConfigDone())      &#123;        Serial.println(<span class="hljs-string">&quot;SmartConfig Success&quot;</span>);        Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());        Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());        delay(<span class="hljs-number">1000</span>);        Serial.println(WiFi.localIP());        WiFi.setAutoConnect(<span class="hljs-literal">true</span>);  <span class="hljs-comment">// 设置自动连接</span>        <span class="hljs-keyword">break</span>;      &#125;      delay(<span class="hljs-number">3000</span>);    &#125;  &#125;&#125;<span class="hljs-comment">// 舵机初始化</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">servoInit</span><span class="hljs-params">()</span> </span>&#123;  <span class="hljs-comment">//设置水平舵机连接的引脚</span>  horizontal.attach(<span class="hljs-number">2</span>);  <span class="hljs-comment">//设置垂直舵机连接的引脚</span>  vertical.attach(<span class="hljs-number">4</span>);  <span class="hljs-comment">//设置机械爪连接的引脚</span>  gripper.attach(<span class="hljs-number">5</span>);  <span class="hljs-comment">//设置水平舵机的初始角度</span>  horizontal.write(H_INIT_DEG);  <span class="hljs-comment">//设置垂直舵机的初始角度</span>  vertical.write(V_INIT_DEG);  <span class="hljs-comment">//设置机械爪的初始角度</span>  gripper.write(G_INIT_DEG);&#125;<span class="hljs-comment">// 将字符数组转换成字符串</span><span class="hljs-function">String <span class="hljs-title">arrayToString</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *arr, <span class="hljs-keyword">int</span> dataLenth)</span> </span>&#123;  String temp = <span class="hljs-string">&quot;&quot;</span>;  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; dataLenth; i++) &#123;    temp += arr[i];  &#125;  <span class="hljs-keyword">return</span> temp;&#125;<span class="hljs-comment">// 根据上位机发的数据对舵机进行相应操作</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">servoWrite</span><span class="hljs-params">(String data)</span> </span>&#123;  <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;up&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = vertical.read();    <span class="hljs-keyword">if</span>(nowDeg - <span class="hljs-number">2</span> &gt;= V_MIN_DEG) &#123;      vertical.write(nowDeg - <span class="hljs-number">2</span>);    &#125;  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;down&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = vertical.read();    <span class="hljs-keyword">if</span>(nowDeg + <span class="hljs-number">2</span> &lt;= V_MAX_DEG) &#123;      vertical.write(nowDeg + <span class="hljs-number">2</span>);    &#125;  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;left&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = horizontal.read();    <span class="hljs-keyword">if</span>(nowDeg + <span class="hljs-number">2</span> &lt;= H_MAX_DEG) &#123;      horizontal.write(nowDeg + <span class="hljs-number">2</span>);    &#125;  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;right&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = horizontal.read();    <span class="hljs-keyword">if</span>(nowDeg - <span class="hljs-number">2</span> &gt;= H_MIN_DEG) &#123;      horizontal.write(nowDeg - <span class="hljs-number">2</span>);    &#125;  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;dis&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = gripper.read();    <span class="hljs-keyword">if</span>(nowDeg - <span class="hljs-number">5</span> &gt;= G_MIN_DEG) &#123;      gripper.write(nowDeg - <span class="hljs-number">5</span>);    &#125;  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(data == <span class="hljs-string">&quot;grab&quot;</span>) &#123;    <span class="hljs-keyword">int</span> nowDeg = gripper.read();    <span class="hljs-keyword">if</span>(nowDeg + <span class="hljs-number">5</span> &lt;= G_MAX_DEG) &#123;      gripper.write(nowDeg + <span class="hljs-number">5</span>);    &#125;  &#125;&#125;<span class="hljs-comment">// webSocket服务的回调函数</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">webSocketEvent</span><span class="hljs-params">(<span class="hljs-keyword">uint8_t</span> num, WStype_t type, <span class="hljs-keyword">uint8_t</span> * payload, <span class="hljs-keyword">size_t</span> length)</span> </span>&#123;  <span class="hljs-keyword">switch</span> (type) &#123;    <span class="hljs-keyword">case</span> WStype_DISCONNECTED: <span class="hljs-comment">//如果连接失败</span>      Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[%u] Disconnected!\n&quot;</span>, num);      <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">case</span> WStype_CONNECTED: <span class="hljs-comment">//如果连接成功</span>      &#123;        IPAddress ip = webSocket.remoteIP(num);        Serial.<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[%u] Connected from %d.%d.%d.%d url: %s\n&quot;</span>, num, ip[<span class="hljs-number">0</span>], ip[<span class="hljs-number">1</span>], ip[<span class="hljs-number">2</span>], ip[<span class="hljs-number">3</span>], payload);        webSocket.sendTXT(num, <span class="hljs-string">&quot;连接成功&quot;</span>);  <span class="hljs-comment">//发送：返回信息到客户端</span>      &#125;      <span class="hljs-keyword">break</span>;    <span class="hljs-keyword">case</span> WStype_TEXT: <span class="hljs-comment">//如果收到字符串</span>      &#123;        String data = arrayToString((<span class="hljs-keyword">char</span> *)payload, length);        Serial.println(<span class="hljs-string">&quot;String:&quot;</span> + data);        servoWrite(data);        <span class="hljs-comment">//webSocket.sendTXT(num, payload);//发送信息到客户端</span>        <span class="hljs-comment">//webSocket.broadcastTXT(payload); // 发送数据到所有连接的客户端</span>      &#125;      <span class="hljs-keyword">break</span>;  &#125;&#125;</code></pre><h4 id="2、微信小程序"><a href="#2、微信小程序" class="headerlink" title="2、微信小程序"></a>2、微信小程序</h4><h6 id="2-1、界面效果展示"><a href="#2-1、界面效果展示" class="headerlink" title="2.1、界面效果展示"></a>2.1、界面效果展示</h6><p><img src="https://upload-images.jianshu.io/upload_images/23570498-61dc42e5fea106ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="微信小程序界面"></p><h6 id="2-2、具体代码"><a href="#2-2、具体代码" class="headerlink" title="2.2、具体代码"></a>2.2、具体代码</h6><ul><li>index.wxml<pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;relative&quot;</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 背景图片 --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pic_background&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;images/yaogan_main.png&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 摇杆图片 --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;left:&#123;&#123;leftLooks&#125;&#125;px;top:&#123;&#123;topLooks&#125;&#125;px;&quot;</span> <span class="hljs-attr">bindtouchstart</span>=<span class="hljs-string">&#x27;ImageTouchstart&#x27;</span> <span class="hljs-attr">bindtouchend</span>=<span class="hljs-string">&#x27;ImageReturn&#x27;</span> <span class="hljs-attr">catchtouchmove</span>=<span class="hljs-string">&#x27;ImageTouchMove&#x27;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pic_tou&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;images/yaogan_bg.png&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;grab_onclik&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grab&quot;</span>&gt;</span>抓<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;discharge_onclik&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;discharge&quot;</span>&gt;</span>放<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></code></pre></li><li>index.wxss<pre><code class="hljs css"><span class="hljs-selector-tag">page</span>&#123;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;&#125;<span class="hljs-selector-class">.relative</span> &#123;  <span class="hljs-attribute">position</span>: relative;  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#000</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;&#125;<span class="hljs-selector-class">.pic_background</span> &#123;  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">top</span>: <span class="hljs-number">70px</span>;  <span class="hljs-attribute">left</span>: <span class="hljs-number">70px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">120px</span>;&#125;<span class="hljs-selector-class">.pic_tou</span> &#123;  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">top</span>: <span class="hljs-number">80px</span>;  <span class="hljs-attribute">left</span>: <span class="hljs-number">80px</span>;  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;&#125;<span class="hljs-selector-class">.grab</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> <span class="hljs-number">#00C0FF</span> solid;  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#FFF</span>;  <span class="hljs-attribute">text-align</span>: center;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">90deg</span>);  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">40px</span>;  <span class="hljs-attribute">left</span>: <span class="hljs-number">60px</span>;&#125;<span class="hljs-selector-class">.discharge</span> &#123;  <span class="hljs-attribute">width</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> <span class="hljs-number">#00C0FF</span> solid;  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#FFF</span>;  <span class="hljs-attribute">text-align</span>: center;  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60px</span>;  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">90deg</span>);  <span class="hljs-attribute">position</span>: absolute;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">40px</span>;  <span class="hljs-attribute">left</span>: <span class="hljs-number">180px</span>;&#125;``` <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">index</span><span class="hljs-selector-class">.js</span>``` <span class="hljs-selector-tag">js</span><span class="hljs-selector-tag">Page</span>(&#123;  <span class="hljs-attribute">WebSocket</span>: null,  timer: null,  data: &#123;    StartX:<span class="hljs-string">&#x27;80&#x27;</span>,    StartY:<span class="hljs-string">&#x27;80&#x27;</span>,    leftLooks: <span class="hljs-string">&#x27;80&#x27;</span>,    topLooks: <span class="hljs-string">&#x27;80&#x27;</span>,    //半径    radius: <span class="hljs-string">&#x27;70&#x27;</span>,  &#125;,  // 页面第一次加载完成调用  <span class="hljs-selector-tag">onLoad</span>: <span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">options</span>) &#123;    // 连接机械手    <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.ConnectGripper</span>();  &#125;,  // 摇杆第一次点击  <span class="hljs-selector-tag">ImageTouchstart</span>: <span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">e</span>) &#123;    this.timer = setInterval(this.Callback, 15);  &#125;,  // 拖动摇杆移动  <span class="hljs-selector-tag">ImageTouchMove</span>: <span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">e</span>) &#123;    var self = this;    var touchX = e.touches[0].clientX - 50;    var touchY = e.touches[0].clientY - 50;    var movePos = self.GetPosition(touchX, touchY);    <span class="hljs-selector-tag">self</span><span class="hljs-selector-class">.setData</span>(&#123;      <span class="hljs-attribute">leftLooks</span>: movePos.posX,      topLooks: movePos.posY    &#125;);  &#125;,  // 摇杆返回  <span class="hljs-selector-tag">ImageReturn</span>: <span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">e</span>) &#123;    var self = this;    <span class="hljs-selector-tag">self</span><span class="hljs-selector-class">.setData</span>(&#123;      <span class="hljs-attribute">leftLooks</span>: self.data.StartX,      topLooks: self.data.StartY,    &#125;)    <span class="hljs-selector-tag">clearInterval</span>(<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.timer</span>);    this.timer = null;  &#125;,  // 获得触碰位置并且进行数据处理获得触碰位置与拖动范围的交点位置  <span class="hljs-selector-tag">GetPosition</span>: <span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">touchX</span>, <span class="hljs-selector-tag">touchY</span>) &#123;    var self = this;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">DValue_X</span>;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">Dvalue_Y</span>;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">Dvalue_Z</span>;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">imageX</span>;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">imageY</span>;    <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">ratio</span>;    DValue_X = touchX - self.data.StartX;    Dvalue_Y = touchY - self.data.StartY;    Dvalue_Z = Math.sqrt(DValue_X * DValue_X + Dvalue_Y * Dvalue_Y);    //触碰点在范围内    if (Dvalue_Z &lt;= self.data.radius) &#123;      imageX = touchX;      imageY = touchY;      imageX = Math.round(imageX);      imageY = Math.round(imageY);      <span class="hljs-selector-tag">return</span> &#123; <span class="hljs-attribute">posX</span>: imageX, posY: imageY &#125;;    &#125; <span class="hljs-selector-tag">else</span> &#123;    //触碰点在范围外      ratio = self.data.radius / Dvalue_Z;      imageX = DValue_X * ratio + 80;      imageY = Dvalue_Y * ratio + 80;      imageX = Math.round(imageX);      imageY = Math.round(imageY);      <span class="hljs-selector-tag">return</span> &#123; <span class="hljs-attribute">posX</span>: imageX, posY: imageY &#125;;    &#125;  &#125;,  // setInterval的回调函数  <span class="hljs-selector-tag">Callback</span>: <span class="hljs-selector-tag">function</span> () &#123;    if(this.data.leftLooks &gt; this.data.StartX &amp;&amp; Math.abs(this.data.topLooks - this.data.StartY) &lt; 10) &#123;      this.WebSocketSend(&#x27;up&#x27;);    &#125; <span class="hljs-selector-tag">else</span> <span class="hljs-selector-tag">if</span> (<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.leftLooks</span> &lt; <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartX</span> &amp;&amp; <span class="hljs-selector-tag">Math</span><span class="hljs-selector-class">.abs</span>(<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.topLooks</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartY</span>) &lt; 10) &#123;      this.WebSocketSend(&#x27;down&#x27;);    &#125; <span class="hljs-selector-tag">else</span> <span class="hljs-selector-tag">if</span> (<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.topLooks</span> &lt; <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartY</span> &amp;&amp; <span class="hljs-selector-tag">Math</span><span class="hljs-selector-class">.abs</span>(<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.leftLooks</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartX</span>) &lt; 10) &#123;      this.WebSocketSend(&#x27;left&#x27;);    &#125; <span class="hljs-selector-tag">else</span> <span class="hljs-selector-tag">if</span> (<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.topLooks</span> &gt; <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartY</span> &amp;&amp; <span class="hljs-selector-tag">Math</span><span class="hljs-selector-class">.abs</span>(<span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.leftLooks</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">this</span><span class="hljs-selector-class">.data</span><span class="hljs-selector-class">.StartX</span>) &lt; 10) &#123;      this.WebSocketSend(&#x27;right&#x27;);    &#125;  &#125;,  // 往下位机发信息  <span class="hljs-selector-tag">WebSocketSend</span>: <span class="hljs-selector-tag">function</span>(<span class="hljs-selector-tag">res</span>) &#123;    this.WebSocket.send(&#123;      <span class="hljs-selector-tag">data</span>: <span class="hljs-selector-tag">res</span>,    &#125;);  &#125;,  // 连接机械手  <span class="hljs-selector-tag">ConnectGripper</span>: <span class="hljs-selector-tag">function</span>() &#123;    var that = this    // 搜索局域网下的机械手服务    <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.startLocalServiceDiscovery</span>(&#123;      <span class="hljs-attribute">serviceType</span>: <span class="hljs-string">&#x27;_gripper._tcp.&#x27;</span>,      success: function (e) &#123;        wx.<span class="hljs-built_in">showLoading</span>(&#123;          title: <span class="hljs-string">&#x27;正在连接机械手&#x27;</span>,        &#125;)      &#125;,    &#125;);    // 监听服务发现事件    <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.onLocalServiceFound</span>(<span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">obj</span>) &#123;      // 发现服务之后停止搜索      <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.stopLocalServiceDiscovery</span>(&#123;        <span class="hljs-attribute">success</span>: function (e) &#123;          // 隐藏加载对话框框          wx.<span class="hljs-built_in">hideLoading</span>(&#123;&#125;);        &#125;,      &#125;);      // 与机械手建立WebSocket连接      that.WebSocket = wx.connectSocket(&#123;        url: &#x27;ws://&#x27; + obj.ip + &#x27;:&#x27; + obj.port,      &#125;);      // 监听连接成功事件      <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.onSocketOpen</span>(<span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">res</span>) &#123;        // 显示连接成功对话框        <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.showToast</span>(&#123;          <span class="hljs-attribute">title</span>: <span class="hljs-string">&#x27;连接成功&#x27;</span>,          icon: <span class="hljs-string">&#x27;success&#x27;</span>,          duration: <span class="hljs-number">2000</span>        &#125;)      &#125;)    &#125;)    // 监听mDNS停止搜索    <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.onLocalServiceDiscoveryStop</span>(<span class="hljs-selector-tag">function</span> (<span class="hljs-selector-tag">obj</span>) &#123;      // 隐藏加载对话框框      <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.hideLoading</span>(&#123;&#125;);      // 显示连接失败对话框      <span class="hljs-selector-tag">wx</span><span class="hljs-selector-class">.showToast</span>(&#123;        <span class="hljs-attribute">title</span>: <span class="hljs-string">&#x27;连接失败，Error：超时！&#x27;</span>,        icon: <span class="hljs-string">&#x27;none&#x27;</span>,        duration: <span class="hljs-number">2000</span>      &#125;);    &#125;);  &#125;,  // &quot;放&quot; 按钮点击事件  <span class="hljs-selector-tag">discharge_onclik</span>: <span class="hljs-selector-tag">function</span>() &#123;    this.WebSocketSend(&quot;dis&quot;);  &#125;,  // &quot;抓&quot; 按钮点击事件  <span class="hljs-selector-tag">grab_onclik</span>: <span class="hljs-selector-tag">function</span>() &#123;    this.WebSocketSend(&quot;grab&quot;);  &#125;&#125;)</code></pre></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>技术贴</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>单片机</tag>
      
      <tag>Arduino</tag>
      
      <tag>微信小程序</tag>
      
      <tag>机械手</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arduino IDE烧写ESP8266环境搭建教程</title>
    <link href="/2020/06/13/Arduino%20IDE%E7%83%A7%E5%86%99ESP8266%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2020/06/13/Arduino%20IDE%E7%83%A7%E5%86%99ESP8266%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="1、第一步：下载安装Arduino-IDE"><a href="#1、第一步：下载安装Arduino-IDE" class="headerlink" title="1、第一步：下载安装Arduino IDE"></a>1、第一步：下载安装Arduino IDE</h3><ul><li><p>可以去<a href="https://www.arduino.cc/en/Main/Software">官网</a>根据电脑系统自行下载<br><img src="https://upload-images.jianshu.io/upload_images/23570498-5c08d57b357bbd16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200" alt="选择系统版本"></p></li><li><p>本文中选择windows版本</p></li><li><p>点击进去下载页面之后选择 “JUST DOWNLOAD”<br><img src="https://upload-images.jianshu.io/upload_images/23570498-eeeea9acf3d075d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/300" alt="JUST DOWNLOAD"></p></li><li><p>下载完成之后，解压安装，无脑下一步即可</p></li></ul><hr><p>###2、第二步：下载esp8266 SDK安装包(千万不要在开发管理器下载，慢到你怀疑人生)</p><ul><li>资源已经上传到某度云，点击下方链接下载即可</li><li>链接：<a href="https://pan.baidu.com/s/1GUyeUe_cVKpd9lVg0jIBTg">https://pan.baidu.com/s/1GUyeUe_cVKpd9lVg0jIBTg</a>  提取码：oaz0</li></ul><hr><h3 id="3、第三步：安装esp8266-SDK安装包"><a href="#3、第三步：安装esp8266-SDK安装包" class="headerlink" title="3、第三步：安装esp8266 SDK安装包"></a>3、第三步：安装esp8266 SDK安装包</h3><ul><li>下载完成之后如下所示<br><img src="https://upload-images.jianshu.io/upload_images/23570498-25d62462d666140c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="esp8266 SDK安装包"></li><li>双击安装即可</li><li>等待安装完成之后，打开Arduino IDE查看是否安装成功<br><img src="https://upload-images.jianshu.io/upload_images/23570498-4a1dcd797262b3d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="查看开发板是否安装成功"></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>环境搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>单片机</tag>
      
      <tag>Arduino</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在IDEA上部署Web项目时，修改Web文件，浏览器不会同步更新！</title>
    <link href="/2020/06/07/%E5%9C%A8IDEA%E4%B8%8A%E9%83%A8%E7%BD%B2Web%E9%A1%B9%E7%9B%AE%E6%97%B6%EF%BC%8C%E4%BF%AE%E6%94%B9Web%E6%96%87%E4%BB%B6%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E4%BC%9A%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0%EF%BC%81/"/>
    <url>/2020/06/07/%E5%9C%A8IDEA%E4%B8%8A%E9%83%A8%E7%BD%B2Web%E9%A1%B9%E7%9B%AE%E6%97%B6%EF%BC%8C%E4%BF%AE%E6%94%B9Web%E6%96%87%E4%BB%B6%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E4%BC%9A%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="一、事故起因"><a href="#一、事故起因" class="headerlink" title="一、事故起因"></a>一、事故起因</h1><ul><li>今天在IDEA上部署Web项目时，运行中途修改了Css样式文件，回到浏览器重新向服务器请求页面，返回的页面并未得到更新。</li><li>在查看网页源代码时，发现，之前对Css文件的更改，并未同步到浏览器，初步判定为是浏览器缓存问题，浏览器在请求页面时，并未重新向服务器请求更改后的Css文件，而是使用了浏览器缓存中的Css文件。</li></ul><hr><h1 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h1><ul><li>解决方法就是清空浏览器缓存，让浏览器重新向服务器请求新的Css文件。</li><li>不同浏览器清空缓存的方式不同，此处以Chrome为例。若为其他浏览器，请自行百度清空缓存的方法。</li></ul><hr><h1 id="三、具体操作"><a href="#三、具体操作" class="headerlink" title="三、具体操作"></a>三、具体操作</h1><ul><li><p><img src="https://upload-images.jianshu.io/upload_images/23570498-a4a5131471bde213.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="清空浏览器缓存"></p></li><li><p>按上图所示操作，找到清空浏览器缓存的入口。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-15ac0c4c3f9d4acf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="缓存清空对话框"></p></li><li><p>单击清除数据，完成数据清除。再次请求页面，便不会出现上述问题。</p></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>踩坑记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IDEA</tag>
      
      <tag>Web</tag>
      
      <tag>浏览器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql插入中文数据发生乱码报错！</title>
    <link href="/2020/06/07/mysql%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E6%95%B0%E6%8D%AE%E5%8F%91%E7%94%9F%E4%B9%B1%E7%A0%81%E6%8A%A5%E9%94%99%EF%BC%81/"/>
    <url>/2020/06/07/mysql%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E6%95%B0%E6%8D%AE%E5%8F%91%E7%94%9F%E4%B9%B1%E7%A0%81%E6%8A%A5%E9%94%99%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="一、事故起因"><a href="#一、事故起因" class="headerlink" title="一、事故起因"></a>一、事故起因</h1><ul><li>今天在mysql执行一段sql语句时，发生了错误。</li><li>经过排查，发现跟mysql的字符集有关。</li></ul><hr><h1 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h1><ul><li>解决方法就是通过修改mysql的配置文件my.ini来修改字符集。</li></ul><hr><h1 id="三、具体操作"><a href="#三、具体操作" class="headerlink" title="三、具体操作"></a>三、具体操作</h1><h4 id="1、-关闭mysql服务"><a href="#1、-关闭mysql服务" class="headerlink" title="1、 关闭mysql服务"></a>1、 关闭mysql服务</h4><p><img src="https://upload-images.jianshu.io/upload_images/23570498-70ec28071656d9c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="以管理员身份进入cmd界面"></p><ul><li><p>在任务栏左侧搜索cmd，找到命令提示符。</p></li><li><p>右击以管理员身份运行。<br><img src="https://upload-images.jianshu.io/upload_images/23570498-32219fc82144fe33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="停止mysql服务"></p></li><li><p>通过net stop mysql57命令关闭mysql服务。</p><h4 id="2、修改配置文件"><a href="#2、修改配置文件" class="headerlink" title="2、修改配置文件"></a>2、修改配置文件</h4><p><img src="https://upload-images.jianshu.io/upload_images/23570498-049784396755ac58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="打开配置文件"></p></li><li><p>进入mysql安装目录，找到my.ini文件，右击以记事本方式打开。</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/23570498-b6da9ea91e6b12a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="修改配置文件"></p><ul><li>在上图相应位置添加default-character-set = utf8和character-set-server = utf8命令，添加完成之后保存文件。</li></ul><h4 id="3、重启mysql服务"><a href="#3、重启mysql服务" class="headerlink" title="3、重启mysql服务"></a>3、重启mysql服务</h4><p><img src="https://upload-images.jianshu.io/upload_images/23570498-1c9e78d275eadfbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="启动mysql服务"></p><ul><li>再次以管理员身份进入cmd界面，通过net start mysql57重新启动mysql服务。</li></ul><h4 id="4、查看字符集"><a href="#4、查看字符集" class="headerlink" title="4、查看字符集"></a>4、查看字符集</h4><p><img src="https://upload-images.jianshu.io/upload_images/23570498-1c8901ed78ca79bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="查看字符集"></p><ul><li>通过cmd界面登录mysql服务，用show variables like ‘char%’;命令查看mysql字符集，结果如上图所示，则表明修改成功。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>踩坑记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记：辅导员的一次盛情邀请</title>
    <link href="/2020/05/27/%E8%AE%B0%EF%BC%9A%E8%BE%85%E5%AF%BC%E5%91%98%E7%9A%84%E4%B8%80%E6%AC%A1%E7%9B%9B%E6%83%85%E9%82%80%E8%AF%B7/"/>
    <url>/2020/05/27/%E8%AE%B0%EF%BC%9A%E8%BE%85%E5%AF%BC%E5%91%98%E7%9A%84%E4%B8%80%E6%AC%A1%E7%9B%9B%E6%83%85%E9%82%80%E8%AF%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="一、”事故”-起因"><a href="#一、”事故”-起因" class="headerlink" title="一、”事故” 起因"></a>一、”事故” 起因</h1><ul><li><p>“2020”，一个略微有些不幸的数字，也许是命运使然，注定其无法像“1949”新中国成立这个辉煌的数字那般耀眼。</p></li><li><p>这一年刚开始不久，就发生了许多让人意外的事情，诸如微软停止了对Win7系统的技术支持、NBA巨星科比坠机以及陪伴了我一年的黑加手环在某次梦醒时分莫名的断了腕带，我并不知道这些到底意味着什么。</p></li><li><p>当然，最值得一提的是，莫过于中国爆发了一种感染性极强的新型冠状病毒，故事的起因也是因为它。</p></li></ul><hr><h1 id="二、正题"><a href="#二、正题" class="headerlink" title="二、正题"></a>二、正题</h1><h3 id="2020年2月13日-emsp-星期四-emsp-多云转阵雨"><a href="#2020年2月13日-emsp-星期四-emsp-多云转阵雨" class="headerlink" title="2020年2月13日&emsp;星期四&emsp;多云转阵雨"></a>2020年2月13日&emsp;星期四&emsp;多云转阵雨</h3><ul><li><p>今天，我依旧早起，在完成了每天都要重复一遍的任务（刷牙洗脸吃饭）之后，我看了一眼微信，发现今天的《学生健康调查表》还没填（由于前面提到的疫情，学校暂停开学，所以每天都要填写这个）。</p></li><li><p>我赶紧点开小程序，刷刷刷~，三下五除二，我便填完了所有信息。正当我兴奋无比的点击按钮准备提交的时候，却一直提示系统繁忙，请稍后重试，在多次尝试无果之后，我便放弃了，打算过一会再试。</p></li><li><p>我如往常一样打开了 bilbili 进行日常的学习，无意中刷到了一个教学视频《如何快速搭建免费个人博客》，好奇心驱使之下，我看完了这个视频。突然心血来潮，也想搭建一个自己的个人博客。打算在上面记录日常生活，分享自己所学和所讲，想来也是一个不错的爱好。</p></li><li><p>如此，我便跟着视频教学一步一步搭建自己的个人博客，正当我深陷其中，乐此不疲之时，无意看了一下时间，已经中午12点了。才猛地想起，调查表的信息还没有提交，我连忙拿起手机打开微信，在进行了一系列行云流水的操作之后，终于提交成功了。</p></li><li><p>在完成了调查表的填写之后，我继续回到电脑前，搭建我的个人博客。当我搭建完成时，发现时间已经不知不觉来到下午5点。顿时感觉有些困意，我便躺在床上睡着了，等我醒来，已经是傍晚7点。</p></li><li><p>我一如往常一样，下楼和家人吃饭，本以为今天的时光会在此平淡的生活中渐渐流逝，万万没想到，我收到了来自辅导员的盛情邀请，原因是：我在今天的《调查表》填写中将征文的截至日期填错了。</p></li><li><p>我怀着忐忑的心情，像一个犯了错的孩子一样，找到了辅导员的微信，在与其经历了一场“搏斗”之后，辅导员叫我阅读学校关于那篇征文的推文里面的内容给她听，我不善拒绝，就勉强答应了她的请求。辅导员在听了我富有感情的朗读之后，以询问的方式问我要不要写征文，考虑到时间关系，我毅然决然的拒绝了。辅导员也很体谅我，退而求其次，叫我写两篇日记交给她，字数不限，还叫我走点心写。我不禁感慨：我们辅导员真是尽职尽责，放假了还不忘关心我的学习（我如此想到，心中便好受了些）。</p></li><li><p>在与辅导员结束了对话之后，我便开始着手写日记，并打算将写完的日记整合一下上传到我的个人博客，算是对此次寒假生活的一次记录吧…</p></li></ul><hr><h3 id="2020年2月14日-emsp-星期五-emsp-多云转阵雨"><a href="#2020年2月14日-emsp-星期五-emsp-多云转阵雨" class="headerlink" title="2020年2月14日&emsp;星期五&emsp;多云转阵雨"></a>2020年2月14日&emsp;星期五&emsp;多云转阵雨</h3><ul><li><p>昨晚，有些失眠，躺在床上，脑海中浮现了许多场景。直至凌晨两点，才缓缓进入梦乡。等我醒来时，已经是早上9点了。我睁开朦胧的双眼，习惯性往床边伸手探去，摸到了我的手机。我下意识的打开手机屏幕看了一下，果然不出我所料。屏幕上方除了中国电信给我发来的疫情防控的信息，便只剩下我那空荡荡的壁纸了。我自嘲一笑，心中不禁想到：或许现在只有中国电信才会对我这么上心吧（即便知道对方是群发的）。</p></li><li><p>抛开这些不切实际的想法，我起床完成日常任务。简单的吃了早餐之后，我继续回到电脑前，熟练的按下开机键，等待电脑开机，发现竟然需要更新。不得不说，微软这种强制用户更新的策略，着实有点不太人道。</p></li><li><p>无奈，我只得重新拿起了手机，无聊的刷着那动态更新并不是很多，篇幅并不是很长的朋友圈（因为我的微信好友并不多）。在连续刷了几条之后，发现今天的朋友圈竟然格外的酸。瞄了一眼手机里的日期信息，才知道原来今天是 14 号情人节，心中不由得生出一股羡慕之情。</p></li><li><p>经过了漫长的等待，电脑终于更新好了，我一如既往的学习着 SQL 语法，做着 SQL 的练习题，等我双手从电脑键盘上离开的时候，天已经渐渐暗了下来。我揉了揉有些疼痛的眼睛，不禁联想到小米有品商城里面的那款防蓝光的眼镜，一直想入手，可惜略贵。</p></li><li><p>我拿起了手机，再次点开朋友圈，竟看到有同学被辅导员要求写十几篇日记，心中顿时涌起一股“伤感”的情绪，原来我并不是唯一的一个，看来辅导员比我想象的要更加博爱。</p></li><li><p>写到此，我已无心执笔。不禁有些感慨：抗疫的生活就是这么朴实无华，且枯燥……</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>趣事记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>吐槽</tag>
      
      <tag>学校</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>51单片机定时一秒</title>
    <link href="/2020/05/27/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AE%9A%E6%97%B6%E4%B8%80%E7%A7%92/"/>
    <url>/2020/05/27/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%AE%9A%E6%97%B6%E4%B8%80%E7%A7%92/</url>
    
    <content type="html"><![CDATA[<h2 id="一、具体思路"><a href="#一、具体思路" class="headerlink" title="一、具体思路"></a>一、具体思路</h2><ul><li><p>51单片机定时器0的最大定时时长为65536微秒，即65.536毫秒。而1秒等于1000毫秒。  </p></li><li><p>显然，1次定时完全无法实现定时1秒的条件。如此，便要多次定时。将多次定时的时间累加起来，便可以达到定时1秒的目的。</p></li><li><p>为使数据精确，需要改变定时器的初值，使改变后可定时的最大时间与1000取余等于0，即可以被整除。这里通过设置初值使每次定时的时间为50毫秒，1000/50=20，即定时20次便达到定时1秒的目的。</p></li></ul><hr><h2 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h2><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;reg52.h&gt;</span></span><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> num = <span class="hljs-number">0</span>;<span class="hljs-comment">// 定时器0</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">T0_time</span><span class="hljs-params">()</span> interrupt 1</span><span class="hljs-function"></span>&#123;    TH0 = (<span class="hljs-number">65536</span> - <span class="hljs-number">50000</span>) / <span class="hljs-number">256</span>;    TL0 = (<span class="hljs-number">65536</span> - <span class="hljs-number">50000</span>) % <span class="hljs-number">256</span>;    num++;&#125;<span class="hljs-comment">// 主函数</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    EA = <span class="hljs-number">1</span>;    ET0 = <span class="hljs-number">1</span>;    TR0 = <span class="hljs-number">1</span>;    TMOD = <span class="hljs-number">0x01</span>;    TH0 = TH0 = (<span class="hljs-number">65536</span> - <span class="hljs-number">50000</span>) / <span class="hljs-number">256</span>;    TL0 = (<span class="hljs-number">65536</span> - <span class="hljs-number">50000</span>) % <span class="hljs-number">256</span>;    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)    &#123;        <span class="hljs-keyword">if</span>(num == <span class="hljs-number">20</span>)        &#123;            num = <span class="hljs-number">0</span>;            p0 = ~p0;        &#125;    &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>技术贴</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>单片机</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
